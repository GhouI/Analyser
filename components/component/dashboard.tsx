/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/xC9dRtoTQjo
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link"
import { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem } from "@/components/ui/dropdown-menu"
import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardDescription, CardTitle, CardContent } from "@/components/ui/card"
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs"
import { Label } from "@/components/ui/label"
import { Popover, PopoverTrigger, PopoverContent } from "@/components/ui/popover"
import { Calendar } from "@/components/ui/calendar"
import { Select } from "@/components/ui/select"
import { CartesianGrid, XAxis, Line, LineChart } from "recharts"
import { ChartTooltipContent, ChartTooltip, ChartContainer } from "@/components/ui/chart"

export function Dashboard() {
  return (
    <div className="flex flex-col h-full w-full bg-background">
      <main className="flex-1 grid gap-6 p-6 md:p-10">
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6">
          <Card className="flex flex-col">
            <CardHeader>
              <CardDescription>Hook Rate</CardDescription>
              <CardTitle>
                <div className="flex items-center gap-2">
                  <span>24.5%</span>
                  <TrendingUpIcon className="h-5 w-5 text-green-500" />
                </div>
              </CardTitle>
            </CardHeader>
          </Card>
          <Card className="flex flex-col">
            <CardHeader>
              <CardDescription>Hold Rate</CardDescription>
              <CardTitle>
                <div className="flex items-center gap-2">
                  <span>78.2%</span>
                  <TrendingUpIcon className="h-5 w-5 text-green-500" />
                </div>
              </CardTitle>
            </CardHeader>
          </Card>
          <Card className="flex flex-col">
            <CardHeader>
              <CardDescription>CTR</CardDescription>
              <CardTitle>
                <div className="flex items-center gap-2">
                  <span>3.4%</span>
                  <TrendingDownIcon className="h-5 w-5 text-red-500" />
                </div>
              </CardTitle>
            </CardHeader>
          </Card>
          <Card className="flex flex-col">
            <CardHeader>
              <CardDescription>ROAS</CardDescription>
              <CardTitle>
                <div className="flex items-center gap-2">
                  <span>$4.25</span>
                  <TrendingUpIcon className="h-5 w-5 text-green-500" />
                </div>
              </CardTitle>
            </CardHeader>
          </Card>
          <Card className="flex flex-col">
            <CardHeader>
              <CardDescription>CPA</CardDescription>
              <CardTitle>
                <div className="flex items-center gap-2">
                  <span>$12.50</span>
                  <TrendingDownIcon className="h-5 w-5 text-red-500" />
                </div>
              </CardTitle>
            </CardHeader>
          </Card>
        </div>
        <div className="grid gap-6">
          <Card className="flex flex-col">
            <CardHeader>
              <CardTitle>Performance Trends</CardTitle>
              <CardDescription>Toggle between weekly and monthly views</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid gap-4">
                <Tabs defaultValue="weekly">
                  <TabsList>
                    <TabsTrigger value="weekly">Weekly</TabsTrigger>
                    <TabsTrigger value="monthly">Monthly</TabsTrigger>
                  </TabsList>
                  <TabsContent value="weekly">
                    <LinechartChart className="aspect-[9/4]" />
                  </TabsContent>
                  <TabsContent value="monthly">
                    <LinechartChart className="aspect-[9/4]" />
                  </TabsContent>
                </Tabs>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className="grid gap-6">
          <Card className="flex flex-col">
            <CardHeader>
              <CardTitle>Filters</CardTitle>
              <CardDescription>Filter your data by date range, brand, or ad account</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid gap-4">
                <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-4">
                  <div>
                    <Label htmlFor="date-range">Date Range</Label>
                    <Popover>
                      <PopoverTrigger asChild>
                        <Button
                          id="date-range"
                          variant="outline"
                          className="w-full justify-start text-left font-normal"
                        >
                          <CalendarClockIcon className="mr-2 h-4 w-4" />
                          June 01, 2023 - June 30, 2023
                        </Button>
                      </PopoverTrigger>
                      <PopoverContent className="w-auto p-0" align="end">
                        <Calendar initialFocus mode="range" numberOfMonths={2} />
                      </PopoverContent>
                    </Popover>
                  </div>
                  <div>
                    <Label htmlFor="brand">Brand</Label>
                    <Select id="brand" className="w-full">
                      <option value="">Select a brand</option>
                      <option value="brand-a">Brand A</option>
                      <option value="brand-b">Brand B</option>
                      <option value="brand-c">Brand C</option>
                    </Select>
                  </div>
                  <div>
                    <Label htmlFor="ad-account">Ad Account</Label>
                    <Select id="ad-account" className="w-full">
                      <option value="">Select an ad account</option>
                      <option value="account-a">Account A</option>
                      <option value="account-b">Account B</option>
                      <option value="account-c">Account C</option>
                    </Select>
                  </div>
                  <div className="flex items-end">
                    <Button className="w-full">Apply Filters</Button>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  )
}

function CalendarClockIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5" />
      <path d="M16 2v4" />
      <path d="M8 2v4" />
      <path d="M3 10h5" />
      <path d="M17.5 17.5 16 16.3V14" />
      <circle cx="16" cy="16" r="6" />
    </svg>
  )
}


function LinechartChart(props) {
  return (
    <div {...props}>
      <ChartContainer
        config={{
          desktop: {
            label: "Desktop",
            color: "hsl(var(--chart-1))",
          },
        }}
      >
        <LineChart
          accessibilityLayer
          data={[
            { month: "January", desktop: 186 },
            { month: "February", desktop: 305 },
            { month: "March", desktop: 237 },
            { month: "April", desktop: 73 },
            { month: "May", desktop: 209 },
            { month: "June", desktop: 214 },
          ]}
          margin={{
            left: 12,
            right: 12,
          }}
        >
          <CartesianGrid vertical={false} />
          <XAxis
            dataKey="month"
            tickLine={false}
            axisLine={false}
            tickMargin={8}
            tickFormatter={(value) => value.slice(0, 3)}
          />
          <ChartTooltip cursor={false} content={<ChartTooltipContent hideLabel />} />
          <Line dataKey="desktop" type="natural" stroke="var(--color-desktop)" strokeWidth={2} dot={false} />
        </LineChart>
      </ChartContainer>
    </div>
  )
}


function Package2Icon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z" />
      <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9" />
      <path d="M12 3v6" />
    </svg>
  )
}


function TrendingDownIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="22 17 13.5 8.5 8.5 13.5 2 7" />
      <polyline points="16 17 22 17 22 11" />
    </svg>
  )
}


function TrendingUpIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="22 7 13.5 15.5 8.5 10.5 2 17" />
      <polyline points="16 7 22 7 22 13" />
    </svg>
  )
}
